(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{309:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"《深入浅出nodejs》阅读笔记"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#《深入浅出nodejs》阅读笔记"}},[t._v("#")]),t._v(" 《深入浅出nodejs》阅读笔记")]),t._v(" "),s("h3",{attrs:{id:"_1-优势"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-优势"}},[t._v("#")]),t._v(" 1.优势")]),t._v(" "),s("ul",[s("li",[t._v("优秀的异步IO处理能力，适合I/O密集场景")]),t._v(" "),s("li",[t._v("保持了js在浏览器中单线程的特点，不用像多线程那样处处在意状态的同步问题，没有死锁存在，也没有上下文交换所带来的性能开销")])]),t._v(" "),s("h3",{attrs:{id:"_2-缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-缺点"}},[t._v("#")]),t._v(" 2.缺点")]),t._v(" "),s("ul",[s("li",[t._v("无法利用多核CPU")]),t._v(" "),s("li",[t._v("错误会引起整个应用的退出，应用的健壮性值得考验")]),t._v(" "),s("li",[t._v("大量计算占用CPU导致无法继续调用异步I/O")])]),t._v(" "),s("h3",{attrs:{id:"_3-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-模块"}},[t._v("#")]),t._v(" 3.模块")]),t._v(" "),s("h3",{attrs:{id:"_3-1-模块书写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-模块书写"}},[t._v("#")]),t._v(" 3.1 模块书写")]),t._v(" "),s("p",[t._v("require()在分析不包含文件拓展名的标志符时，Node会按"),s("code",[t._v(".js .json .node")]),t._v("的次序补足扩展名，依次尝试，尝试过程中，需要调用fs模块同步阻塞式判断文件是否存在，小诀窍是"),s("code",[t._v("如果是.node或者.json文件，传递给require()时就带上扩展名，能加快一点速度,另一个我诀窍是同步配合缓存，可以大幅度环节node单线程中阻塞式调用的缺陷")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-模块编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-模块编译"}},[t._v("#")]),t._v(" 3.2 模块编译")]),t._v(" "),s("p",[t._v("每个模块中存在"),s("code",[t._v("require exports module __fileName __dirname")]),t._v("这些变量，是因为在编译过程中，Node对获取js文件内容进行了头尾包装。一个正常的js文件会被包装成：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__fileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("__dirname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// some code")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("执行之后。模块的"),s("code",[t._v("exports")]),t._v("属性被返回给了调用方，"),s("code",[t._v("exports")]),t._v("属性上的任何方法和属性都可以被外部调用到。此外"),s("code",[t._v("exports")]),t._v("对象是通过形参形式传入的，直接赋值形参会改变形参的引用，但并不能改变作用域外的值。如果要达到引入一个类的效果，请赋值给"),s("code",[t._v("modeule.exports")]),t._v("对象")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-amd-cmd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-amd-cmd"}},[t._v("#")]),t._v(" 3.3 AMD/CMD")]),t._v(" "),s("p",[s("code",[t._v("CommonJS")]),t._v("为后端js制定的规范并不完全适合前端的应用场景，于是出现了"),s("code",[t._v("AMD")]),t._v("以及玉伯定义的"),s("code",[t._v("CMD")]),t._v("规范")]),t._v(" "),s("h4",{attrs:{id:"_3-3-1-amd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-amd"}},[t._v("#")]),t._v(" 3.3.1 AMD")]),t._v(" "),s("p",[s("code",[t._v("define(id?,dependencies?,factory)")]),t._v("id和依赖均为可选参数，factory为实际代码。举个🌰：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dep1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dep2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("dep1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("dep2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("即"),s("code",[t._v("AMD")]),t._v("需要声明模块的时候指定所有依赖")]),t._v(" "),s("h4",{attrs:{id:"_3-3-2-cmd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-cmd"}},[t._v("#")]),t._v(" 3.3.2 CMD")]),t._v(" "),s("p",[s("code",[t._v("define(factory)")]),t._v("，"),s("code",[t._v("CMD")]),t._v("支持动态导入依赖，举个🌰：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("module")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//随时调用require引用即可")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_3-4-兼容多种模块规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-兼容多种模块规范"}},[t._v("#")]),t._v(" 3.4 兼容多种模块规范")]),t._v(" "),s("p",[t._v("为了让一个模块可以运行在前后端，类库开发者需要将类库代码包装在一个闭包内。举个🌰，将"),s("code",[t._v("hello()")]),t._v("定义到不同环境：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("definition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检测上下文环境是否为AMD/CMD")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hasDefine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" define "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'function'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//检测上下文环境是否为Node")]),t._v("\n    hasExports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" module "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undefined'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasDefine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//AMD/CMD")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("define")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("definetion"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hasExports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//定义为普通Node模块")]),t._v("\n        module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("definition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//将模块执行结果挂载在window变量中，在浏览器中this指向window对象")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("definition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" hello\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_4-异步i-o"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-异步i-o"}},[t._v("#")]),t._v(" 4. 异步I/O")]),t._v(" "),s("p",[t._v("Node是单线程的，这里的单线程指的是js运行在单线程中罢了，内部完成I/O任务的另有线程池。\n"),s("code",[t._v("事件循环")]),t._v("、"),s("code",[t._v("观察者")]),t._v("、"),s("code",[t._v("请求对象")]),t._v("、"),s("code",[t._v("I/O线程池")]),t._v("四者共同构成了Node异步I/O模型的基本要素。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",[t._v("对于计算机内核I/O而言，"),s("code",[t._v("异步/同步")]),t._v("和"),s("code",[t._v("阻塞/非阻塞")]),t._v("实际上是两回事。操作系统内核对于I/O只有两种方式："),s("code",[t._v("阻塞与非阻塞")]),t._v("。调用阻塞I/O时，应用程序需要等待I/O完成才返回结果。非阻塞I/O调用之后会立即返回。由于完整的I/O没有完成，立即返回的并不是业务层需要的数据，为了获取完成的数据，应用程序需要重复调用I/O来确认是否完成。这种重复判断的技术叫做"),s("code",[t._v("轮询")]),t._v("。轮询满足了非阻塞I/O确保获取完整数据的需求，但是对于应用程序而言，他仍然只能算是一种同步，因为应用程序还是要等待I/O完全返回。")])]),t._v(" "),s("p",[t._v("对于Node的异步I/O调用而言，js发起异步调用到执行完I/O操作，存在一种中间产物，即"),s("code",[t._v("请求对象")]),t._v("。第一阶段就结束了，js线程可以继续执行后续操作，当前的I/O操作在线程池中等待执行，不管它是否阻塞I/O，都不会影响js线程的后续执行。如此就达到了异步的目的。"),s("code",[t._v("请求对象")]),t._v("是重要的中间产物，所有状态都保存在这个对象中，包括送入线程池等待执行以及I/O操作完毕后的回调处理。组装好请求对象，送入I/O线程池等待执行，是异步I/O的第一部分，"),s("code",[t._v("回调通知")]),t._v("是第二部分。"),s("code",[t._v("事件循环")]),t._v("的每次TICK执行，会调用相关系统方法检查线程池中是否有执行完的请求，如果存在，会将请求对象加入到I/O"),s("code",[t._v("观察者")]),t._v("队列，然后将其当做事件处理。至此，整个异步I/O流程完全结束。")]),t._v(" "),s("h3",{attrs:{id:"_5-非i-o的异步api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-非i-o的异步api"}},[t._v("#")]),t._v(" 5.非I/O的异步API")]),t._v(" "),s("p",[t._v("即"),s("code",[t._v("setTimeout()")]),t._v("、"),s("code",[t._v("setInterval()")]),t._v("、"),s("code",[t._v("setImmediate()")]),t._v("、"),s("code",[t._v("process.nextTick()")]),t._v("。\nsetTimeout()和setInterval()实现原理与异步I/O类似，只是不需要I/O线程池的参与，调用这两个API创建的定时器会被插入到"),s("code",[t._v("定时器观察者")]),t._v("内部的一个"),s("code",[t._v("红黑树")]),t._v("中，每次"),s("code",[t._v("事件循环(Tick)")]),t._v("执行时，从该红黑树中取出定时器对象，检查是否超时，超时就形成一个事件，他的回调函数立即执行。"),s("br"),t._v("\n想立即异步执行一个任务可以这样调用：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("但是采用定时器需要动用红黑树，创建定时器对象和迭代等操作，较为浪费性能，"),s("code",[t._v("process.nextTick()")]),t._v("操作较为轻量")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'立即执行'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("setImmediate()")]),t._v("与"),s("code",[t._v("process.nextTick")]),t._v("功能十分相似，其中"),s("code",[t._v("process.nextTick")]),t._v("的优先级更高。原因是事件循环对观察者的检查是有先后顺序的，process.nextTick属于"),s("code",[t._v("idle")]),t._v("观察者，setImmediate属于"),s("code",[t._v("check")]),t._v("观察者。具体实现上，process.nextTick的回调保存在一个数组中，每轮循环会将数据中的回调函数全部执行，而setImmediate的回调函数保存在链表中，每轮循环只执行链表中的一个回调函数。")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("事件循环")]),t._v("是异步实现的核心，他与浏览器中的执行模型基本保持了一致。")])]),t._v(" "),s("h3",{attrs:{id:"_6-异步编程解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-异步编程解决方案"}},[t._v("#")]),t._v(" 6.异步编程解决方案")]),t._v(" "),s("h3",{attrs:{id:"_6-1-事件发布-订阅模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-事件发布-订阅模式"}},[t._v("#")]),t._v(" 6.1.事件发布/订阅模式")]),t._v(" "),s("p",[t._v("Node自身提供的"),s("code",[t._v("events")]),t._v("模块是发布订阅模式的一个简单实现，不存在事件冒泡，也不存在"),s("code",[t._v("preventDefault()、stopPropagation()、stopImmediatePropagetion()")]),t._v("等控制事件传递的方法\n示例：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("emitter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'event1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nemitter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'event1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'i am msg'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("通过emit()发布事件后，消息会立即传递给当前事件的所有侦听器执行，侦听器可以很灵活的添加和删除，使得事件与逻辑之间可以轻松的关联和解耦")]),t._v(" "),s("h3",{attrs:{id:"_6-2-promise-deferred模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-promise-deferred模式"}},[t._v("#")]),t._v(" 6.2.promise/deferred模式")])])}),[],!1,null,null,null);s.default=e.exports}}]);